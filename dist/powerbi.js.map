{"version":3,"sources":["webpack:///webpack/bootstrap 920450424346efc575a2","webpack:///./src/powerbi.ts","webpack:///./src/core.ts","webpack:///./src/report.ts","webpack:///./src/embed.ts","webpack:///./src/util.ts","webpack:///./src/tile.ts"],"names":[],"mappings":"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","file":"powerbi.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 920450424346efc575a2\n **/","import PowerBi from './core';\r\n\r\n/**\r\n * Make PowerBi available on global object for use in apps without module loading support.\r\n * Save class to allow creating an instance of the service.\r\n * Create instance of class with default config for normal usage.\r\n */\r\n(<any>window).Powerbi = PowerBi;\r\n(<any>window).powerbi = new PowerBi();\n\n\n/** WEBPACK FOOTER **\n ** ./src/powerbi.ts\n **/","import { default as Embed, IEmbedOptions } from './embed';\r\nimport Report from './report';\r\nimport Tile from './tile';\r\nimport Utils from './util';\r\n\r\ndeclare type Component = (typeof Report | typeof Tile)\r\n\r\ninterface IComponentType {\r\n    type: string;\r\n    component: Component\r\n}\r\n\r\nexport interface IPowerBiElement extends HTMLElement {\r\n    powerBiEmbed: Embed;\r\n}\r\n\r\nexport interface IPowerBiConfiguration {\r\n    autoEmbedOnContentLoaded?: boolean;\r\n    onError?: (error: any) => any;\r\n}\r\n\r\nexport default class PowerBi {\r\n    /**\r\n     * List of components this service can embed.\r\n     */\r\n    // TODO: Find out how to use interface here instead of concrete type so we don't have to \r\n    // use union types which are maintenance problem\r\n    private static components: Component[] = [\r\n        Tile,\r\n        Report\r\n    ];\r\n    /**\r\n     * Mapping of event names from iframe postMessage to their name percieved by parent DOM.\r\n     * Example: User clicks on embeded report which is inside iframe. The iframe code resends \r\n     * event as postMessage with { event: 'reportClicked', ... } and this name is converted to hyphenated\r\n     * name and dispatched from the parent element of the iframe to simulate the event bubbling through two\r\n     * different windows / DOMs\r\n     */\r\n    private static eventMap = {\r\n        'tileClicked': 'tile-click',\r\n        'tileLoaded': 'tile-load',\r\n        'reportPageLoaded': 'report-load'\r\n    };\r\n    \r\n    /**\r\n     * Default configuration for service.\r\n     */\r\n    private static defaultConfig: IPowerBiConfiguration = {\r\n        autoEmbedOnContentLoaded: false,\r\n        onError: (...args) => console.log(args[0], args.slice(1))\r\n    };\r\n\r\n    // TODO: Should be private but need to be public for backwards compatibility.\r\n    /** Save access token as fallback/global token to use when local token for report/tile is not provided. */\r\n    accessToken: string;\r\n    \r\n    /** Configuration object */\r\n    private config: IPowerBiConfiguration;\r\n    \r\n    /** List of components (Reports/Tiles) that have been embedded using this service instance. */\r\n    private embeds: Embed[];\r\n    \r\n    constructor(config: IPowerBiConfiguration = {}) {\r\n        this.embeds = [];\r\n        window.addEventListener('message', this.onReceiveMessage.bind(this), false);\r\n        \r\n        // TODO: Change when Object.assign is available.\r\n        this.config = Utils.assign({}, PowerBi.defaultConfig, config);\r\n        \r\n        if (this.config.autoEmbedOnContentLoaded) {\r\n            window.addEventListener('DOMContentLoaded', (event: Event) => this.init(document.body), false);\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Handler for DOMContentLoaded which searches DOM for elements having 'powerbi-embed' attribute\r\n     * and automatically attempts to embed a powerbi component based on information from the attributes.\r\n     * Only runs if `config.autoEmbedOnContentLoaded` is true when the service is created.\r\n     */\r\n    init(container: HTMLElement): void {\r\n        container = (container && container instanceof HTMLElement) ? container : document.body;\r\n        \r\n        const elements = Array.prototype.slice.call(container.querySelectorAll('[powerbi-embed]'));\r\n        elements.forEach(element => this.embed(element, { getGlobalAccessToken: () => this.accessToken }));\r\n    }\r\n    \r\n    /**\r\n     * Given an html element embed component based on configuration.\r\n     * If component has already been created and attached to eleemnt simply return it to prevent creating duplicate components for same element.\r\n     */\r\n    embed(element: IPowerBiElement, config: IEmbedOptions = {}): Embed {\r\n        let instance: Embed;\r\n        \r\n        if (element.powerBiEmbed && !config.overwrite) {\r\n            instance = element.powerBiEmbed;\r\n            return instance;\r\n        }\r\n        \r\n        /** If component is already registered on this element, but we are supposed to overwrite, remove existing component from registry */\r\n        if (element.powerBiEmbed && config.overwrite) {\r\n            this.remove(element.powerBiEmbed);\r\n        }\r\n        \r\n        const Component = Utils.find(component => config.type === component.attribute || element.getAttribute(component.attribute) !== null, PowerBi.components);\r\n        \r\n        if (!Component) {\r\n            throw new Error(`Attempted to embed using config ${config} on element ${element.outerHTML}, but could not determine what type of component to embed. You must specify a type in the configuration or as an attribute such as 'powerbi-report'.`);\r\n        }\r\n        \r\n        // TODO: Consider removing in favor of passing reference to `this` in constructor\r\n        // The getGlobalAccessToken function is only here so that the components (Tile | Report) can get the global access token without needing reference\r\n        // to the service that they are registered within becaues it creates circular dependencies\r\n        config.getGlobalAccessToken = () => this.accessToken;\r\n        \r\n        instance = new Component(element, config);\r\n        element.powerBiEmbed = instance;\r\n        this.embeds.push(instance);\r\n        \r\n        return instance;\r\n    }\r\n    \r\n    /**\r\n     * Deprecated alias for embed.\r\n     * This performed the same function as embed. Embed is more semantic to the operation performed so we conslidated to a single method.\r\n     */\r\n    get = this.embed\r\n    \r\n    /**\r\n     * Remove component from the list of embedded components.\r\n     */\r\n    remove(component: Embed): void {\r\n        Utils.remove(x => x === component, this.embeds);\r\n    }\r\n    \r\n    /**\r\n     * Handler for window message event.\r\n     * Parses event data as json and if it came from an iframe that matches one from an existing embeded component re-dispatches the event on the iframe's parent element\r\n     * to simulate the event bubbling through the two separate windows / DOMs.\r\n     * \r\n     * If an error occurs when parsing event.data call error handler provided during configuration.\r\n     */\r\n    onReceiveMessage(event: MessageEvent): void {\r\n        if (!event) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            var messageData = JSON.parse(event.data);\r\n            this.embeds.some(embed => {\r\n                // Only raise the event on the embed that matches the post message origin\r\n                if (event.source === embed.iframe.contentWindow) {\r\n                    Utils.raiseCustomEvent(embed.element, PowerBi.eventMap[messageData.event], messageData);\r\n                    return true;\r\n                }\r\n                \r\n                return false;\r\n            });\r\n        }\r\n        catch (e) {\r\n            if (typeof this.config.onError === 'function') {\r\n                this.config.onError.call(window, e);\r\n            }\r\n            else {\r\n                throw e;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/core.ts\n **/","import { default as Embed, IEmbedOptions } from './embed';\r\n\r\nexport default class Report extends Embed {\r\n    // Attribute used to specify id for report and simultaneously used to know which type of object the id is for.\r\n    static attribute: string = 'powerbi-report';\r\n    \r\n    constructor(element: HTMLElement, options: IEmbedOptions) {\r\n        /** Force loadAction on options to match the type of component. This is required to bootstrap iframe. */\r\n        options.loadAction = 'loadReport';\r\n        super(element, options);\r\n    }\r\n    \r\n    getEmbedUrl(): string {\r\n        let embedUrl = super.getEmbedUrl();\r\n        if (!embedUrl) {\r\n            let reportId = this.options.id;\r\n            \r\n            if (!reportId) {\r\n                reportId = this.element.getAttribute('powerbi-report');\r\n            }\r\n\r\n            if (!reportId) {\r\n                throw new Error(`Embed url cannot be constructed. 'powerbi-embed' attribute was not specified and the fallback to 'powerbi-report' were not specified either.`);\r\n            }\r\n\r\n            embedUrl = `https://embedded.powerbi.com/appTokenReportEmbed?reportId=${reportId}`;\r\n        }\r\n        \r\n        // TODO: Need safe way to add url parameters.\r\n        if(!this.options.filterPaneEnabled) {\r\n            embedUrl += `&filterPaneEnabled=false`;\r\n        }\r\n\r\n        return embedUrl;\r\n    }\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/report.ts\n **/","import Utils from './util';\r\n\r\ndeclare global {\r\n    interface Document {\r\n        // Mozilla Fullscreen\r\n        mozCancelFullScreen: Function;\r\n        \r\n        // Ms Fullscreen\r\n        msExitFullscreen: Function;\r\n    }\r\n    \r\n    interface HTMLIFrameElement {\r\n        // Mozilla Fullscreen\r\n        mozRequestFullScreen: Function;\r\n        \r\n        // Ms Fullscreen\r\n        msRequestFullscreen: Function;\r\n    }\r\n}\r\n\r\nexport interface IEmbedOptions {\r\n    type?: string;\r\n    id?: string;\r\n    accessToken?: string;\r\n    loadAction?: string;\r\n    embedUrl?: string;\r\n    webUrl?: string;\r\n    name?: string;\r\n    filterPaneEnabled?: boolean;\r\n    getGlobalAccessToken?: () => string;\r\n    overwrite?: boolean;\r\n}\r\n\r\nabstract class Embed {\r\n    /**\r\n     * Default options for embeddable component.\r\n     */\r\n    private static defaultOptions: IEmbedOptions = {\r\n        filterPaneEnabled: true\r\n    };\r\n    \r\n    element: HTMLElement;\r\n    iframe: HTMLIFrameElement;\r\n    options: IEmbedOptions;\r\n    \r\n    constructor(element: HTMLElement, options: IEmbedOptions) {\r\n        this.element = element;\r\n        \r\n        // TODO: Change when Object.assign is available.\r\n        this.options = Utils.assign({}, Embed.defaultOptions, options);\r\n        \r\n        const embedUrl = this.getEmbedUrl();\r\n        const iframeHtml = `<iframe style=\"width:100%;height:100%;\" src=\"${embedUrl}\" scrolling=\"no\" allowfullscreen=\"true\"></iframe>`;\r\n        \r\n        this.element.innerHTML = iframeHtml;\r\n        this.iframe = <HTMLIFrameElement>this.element.childNodes[0];\r\n        this.iframe.addEventListener('load', this.load.bind(this), false);\r\n    }\r\n    \r\n    /**\r\n     * Handler for when the iframe has finished loading the powerbi placeholder page.\r\n     * This is used to inject configuration options such as access token, loadAction, etc\r\n     * which allow iframe to load the actual report with authentication.\r\n     */\r\n    private load(): void {\r\n        const computedStyle = window.getComputedStyle(this.element);\r\n        const accessToken = this.getAccessToken();\r\n        \r\n        const initEventArgs = {\r\n            message: {\r\n                action: this.options.loadAction,\r\n                accessToken,\r\n                width: computedStyle.width,\r\n                height: computedStyle.height\r\n            }\r\n        };\r\n        \r\n        Utils.raiseCustomEvent(this.element, 'embed-init', initEventArgs);\r\n        this.iframe.contentWindow.postMessage(JSON.stringify(initEventArgs.message), '*');\r\n    }\r\n    \r\n    /**\r\n     * Get access token from first available location: options, attribute, global.\r\n     */\r\n    private getAccessToken(): string {\r\n        const accessToken = this.options.accessToken || this.element.getAttribute('powerbi-access-token') || this.options.getGlobalAccessToken();\r\n        \r\n        if (!accessToken) {\r\n            throw new Error(`No access token was found for element. You must specify an access token directly on the element using attribute 'powerbi-access-token' or specify a global token at: powerbi.accessToken.`);\r\n        }\r\n        \r\n        return accessToken;\r\n    }\r\n    \r\n    /**\r\n     * Get embed url from first available location: options, attribute.\r\n     */\r\n    protected getEmbedUrl(): string {\r\n        const embedUrl = this.options.embedUrl || this.element.getAttribute('powerbi-embed');\r\n        \r\n        return embedUrl; \r\n    }\r\n    \r\n    /**\r\n     * Request the browser to make the components iframe fullscreen.\r\n     */\r\n    fullscreen(): void {\r\n        const requestFullScreen = this.iframe.requestFullscreen || this.iframe.msRequestFullscreen || this.iframe.mozRequestFullScreen || this.iframe.webkitRequestFullscreen;\r\n        requestFullScreen.call(this.iframe);\r\n    }\r\n    \r\n    /**\r\n     * Exit fullscreen.\r\n     */\r\n    exitFullscreen(): void {\r\n        if (!this.isFullscreen(this.iframe)) {\r\n            return;\r\n        }\r\n\r\n        const exitFullscreen = document.exitFullscreen || document.mozCancelFullScreen || document.webkitExitFullscreen || document.msExitFullscreen;\r\n        exitFullscreen.call(document);\r\n    }\r\n    \r\n    /**\r\n     * Return true if iframe is fullscreen,\r\n     * otherwise return false \r\n     */\r\n    private isFullscreen(iframe: HTMLIFrameElement): boolean {\r\n        const options = ['fullscreenElement', 'webkitFullscreenElement', 'mozFullscreenScreenElement', 'msFullscreenElement'];\r\n        \r\n        return options.some(option => document[option] === iframe);\r\n    }\r\n}\r\n\r\nexport default Embed;\n\n\n/** WEBPACK FOOTER **\n ** ./src/embed.ts\n **/","export default class Utils {\r\n    static raiseCustomEvent(element: HTMLElement, eventName: string, eventData: any) {\r\n        let customEvent;\r\n        if (typeof (<any>window).CustomEvent === 'function') {\r\n            customEvent = new CustomEvent(eventName, {\r\n                detail: eventData,\r\n                bubbles: true,\r\n                cancelable: true\r\n            });\r\n        } else {\r\n            customEvent = document.createEvent('CustomEvent');\r\n            customEvent.initCustomEvent(eventName, true, true, eventData);\r\n        }\r\n\r\n        element.dispatchEvent(customEvent);\r\n        if (customEvent.defaultPrevented || !customEvent.returnValue) {\r\n            return;\r\n        }\r\n\r\n        const inlineEventAttr = 'on' + eventName.replace('-', '');\r\n        const inlineScript = element.getAttribute(inlineEventAttr);\r\n        if (inlineScript) {\r\n            eval.call(element, inlineScript);\r\n        }\r\n    }\r\n    \r\n    static findIndex<T>(predicate: (T) => boolean, xs: T[]): number {\r\n        if(!Array.isArray(xs)) {\r\n            throw new Error(`You attempted to call find with second that was not an array. You passed: ${xs}`);\r\n        }\r\n        \r\n        let index;\r\n        xs.some((x, i) => {\r\n            if(predicate(x)) {\r\n                index = i;\r\n                return true;\r\n            }\r\n        });\r\n        \r\n        return index;\r\n    }\r\n    \r\n    static find<T>(predicate: (T) => boolean, xs: T[]): T {\r\n        const index = Utils.findIndex(predicate, xs);\r\n        return xs[index];\r\n    }\r\n    \r\n    static remove<T>(predicate: (T) => boolean, xs: T[]): void {\r\n        const index = Utils.findIndex(predicate, xs);\r\n        xs.splice(index, 1);\r\n    }\r\n    \r\n    // See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\r\n    // TODO: replace in favor of using polyfill\r\n    static assign = function (...args) {\r\n        var target = args[0];\r\n        \r\n        'use strict';\r\n        if (target === undefined || target === null) {\r\n            throw new TypeError('Cannot convert undefined or null to object');\r\n        }\r\n\r\n        var output = Object(target);\r\n        for (var index = 1; index < arguments.length; index++) {\r\n            var source = arguments[index];\r\n            if (source !== undefined && source !== null) {\r\n                for (var nextKey in source) {\r\n                    if (source.hasOwnProperty(nextKey)) {\r\n                        output[nextKey] = source[nextKey];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return output;\r\n    };\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/util.ts\n **/","import { default as Embed, IEmbedOptions } from './embed';\r\n\r\nexport default class Tile extends Embed {\r\n    static attribute: string = 'powerbi-tile';\r\n    \r\n    constructor(element: HTMLElement, options: IEmbedOptions) {\r\n        /** Force loadAction on options to match the type of component. This is required to bootstrap iframe. */\r\n        options.loadAction = 'loadTile';\r\n        super(element, options);\r\n    }\r\n    \r\n    getEmbedUrl(): string {\r\n        let embedUrl = super.getEmbedUrl();\r\n\r\n        if (!embedUrl) {\r\n            const dashboardId = this.element.getAttribute('powerbi-dashboard');\r\n            const tileId = this.element.getAttribute('powerbi-tile');\r\n\r\n            if (!(dashboardId && tileId)) {\r\n                throw new Error(`Embed url cannot be constructed. 'powerbi-embed' attribute was not specified and the fallback to 'powerbi-dashboard' and 'powerbi-tile' were not specified either.`);\r\n            }\r\n\r\n            embedUrl = `https://app.powerbi.com/embed?dashboardId=${dashboardId}&tileId=${tileId}`;\r\n        }\r\n\r\n        return embedUrl;\r\n    }\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/tile.ts\n **/"],"sourceRoot":""}