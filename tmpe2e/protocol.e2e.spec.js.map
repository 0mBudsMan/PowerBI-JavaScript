{"version":3,"sources":["webpack:///webpack/bootstrap f66629e539b72ebd532d","webpack:///./e2e/protocol.e2e.spec.ts","webpack:///./~/window-post-message-proxy/dist/windowPostMessageProxy.js","webpack:///./~/window-post-message-proxy/dist ^\\.\\/.*$","webpack:///./~/http-post-message/dist/httpPostMessage.js","webpack:///./~/http-post-message/dist ^\\.\\/.*$","webpack:///./~/powerbi-router/dist/router.js","webpack:///./~/powerbi-router/dist ^\\.\\/.*$","webpack:///./e2e/utility/mockReportEmbed.ts","webpack:///./e2e/utility/mockApp.ts"],"names":[],"mappings":"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AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA0D,uCAAuC;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8FAA6F;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,EAAC;AACD,mD;;;;;;AC5LA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAiC,uDAAuD;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACfA;AACA;AACA,0DAA0C;AAC1C;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA,6CAA4C,qBAAqB;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAqC,cAAc;AACnD;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA,sCAAqC,cAAc;AACnD;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA,sCAAqC,cAAc;AACnD;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA,sCAAqC,cAAc;AACnD;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA,sCAAqC,cAAc;AACnD;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA4B,uBAAuB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,MAAK;AACL;AACA,EAAC;AACD,4C;;;;;;ACzGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAiC,uDAAuD;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACfA;AACA;AACA,2DAA0C;AAC1C;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA,6CAA4C,iBAAiB,EAAE;AAC/D;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,EAAC;AACD,mC;;;;;;AChEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAiC,uDAAuD;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACfA,KAAY,IAAI,uBAAM,CAA2B,CAAC;AAClD,KAAY,GAAG,uBAAM,CAAmB,CAAC;AACzC,KAAY,MAAM,uBAAM,CAAgB,CAAC;AACzC,qCAAuC,EAAW,CAAC;A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","file":"protocol.e2e.spec.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap f66629e539b72ebd532d\n **/","import * as Wpmp from 'window-post-message-proxy';\r\nimport * as Hpm from 'http-post-message';\r\nimport * as Router from 'powerbi-router';\r\nimport { spyApp, setup } from './utility/mockReportEmbed';\r\n\r\nfunction createDeferred() {\r\n  const deferred:any = {\r\n    resolve: null,\r\n    reject: null,\r\n    promise: null\r\n  };\r\n  \r\n  const promise = new Promise((resolve: () => void, reject: () => void) => {\r\n    deferred.resolve = resolve;\r\n    deferred.reject = reject;\r\n  });\r\n  \r\n  deferred.promise = promise;\r\n  \r\n  return deferred;\r\n}\r\n\r\ndeclare global {\r\n  interface Window {\r\n    __karma__: any;\r\n  }\r\n}\r\n\r\ndescribe('Protocol', function () {\r\n  let logMessages = (window.__karma__.config.args[0] === 'logMessages');\r\n  let hpm: Hpm.HttpPostMessage;\r\n  let wpmp: Wpmp.WindowPostMessageProxy;\r\n  let iframe: HTMLIFrameElement;\r\n  let iframeHpm: Hpm.HttpPostMessage;\r\n  let iframeLoaded: Promise<void>;\r\n  \r\n  let handler: Wpmp.IMessageHandler;\r\n  let spyHandler: {\r\n    test: jasmine.Spy,\r\n    handle: jasmine.Spy\r\n  };\r\n  \r\n  beforeAll(function () {\r\n    const iframeSrc = \"base/e2e/utility/noop.html\";\r\n    const $iframe = $(`<iframe src=\"${iframeSrc}\" id=\"testiframe\"></iframe>`).appendTo(document.body);\r\n    iframe = <HTMLIFrameElement>$iframe.get(0);\r\n    \r\n    // Register Iframe side\r\n    iframeHpm = setup(iframe.contentWindow, window, logMessages);\r\n    \r\n    // Register SDK side WPMP\r\n    wpmp = new Wpmp.WindowPostMessageProxy(iframe.contentWindow, {\r\n      processTrackingProperties: {\r\n          addTrackingProperties: Hpm.HttpPostMessage.addTrackingProperties,\r\n          getTrackingProperties: Hpm.HttpPostMessage.getTrackingProperties,\r\n      },\r\n      isErrorMessage: Hpm.HttpPostMessage.isErrorMessage,\r\n      name: 'HostProxyDefaultNoHandlers',\r\n      logMessages\r\n    });\r\n    hpm = new Hpm.HttpPostMessage(wpmp, {\r\n      origin: 'sdk',\r\n      'sdk-type': 'js',\r\n      'sdk-version': '2.0.0'\r\n    });\r\n    const router = new Router.Router(wpmp);\r\n    router.post('/report/events/loaded', (req, res) => {\r\n      handler.handle(req);\r\n      res.send(202);\r\n    });\r\n    router.post('/report/events/pageChanged', (req, res) => {\r\n      handler.handle(req);\r\n      res.send(202);\r\n    });\r\n    router.post('/report/events/filterAdded', (req, res) => {\r\n      handler.handle(req);\r\n      res.send(202);\r\n    });\r\n    router.post('/report/events/filterUpdated', (req, res) => {\r\n      handler.handle(req);\r\n      res.send(202);\r\n    });\r\n    router.post('/report/events/filterRemoved', (req, res) => {\r\n      handler.handle(req);\r\n      res.send(202);\r\n    });\r\n    router.post('/report/events/filtersCleared', (req, res) => {\r\n      handler.handle(req);\r\n      res.send(202);\r\n    });\r\n    router.post('/report/events/settingsUpdated', (req, res) => {\r\n      handler.handle(req);\r\n      res.send(202);\r\n    });\r\n    router.post('/report/events/dataSelected', (req, res) => {\r\n      handler.handle(req);\r\n      res.send(202);\r\n    });\r\n    \r\n    handler = {\r\n      test: jasmine.createSpy(\"testSpy\").and.returnValue(true),\r\n      handle: jasmine.createSpy(\"handleSpy\").and.callFake(function (message: any) {\r\n        message.handled = true;\r\n        return message;\r\n      })\r\n    };\r\n    \r\n    spyHandler = <any>handler;\r\n    wpmp.addHandler(handler);\r\n    \r\n    const iframeLoadedDeferred = createDeferred();\r\n    iframe.addEventListener('load', () => {\r\n      iframeLoadedDeferred.resolve();\r\n    });\r\n    iframeLoaded = iframeLoadedDeferred.promise;\r\n  });\r\n  \r\n  afterAll(function () { \r\n    //wpmp.stop();\r\n  });\r\n  \r\n  beforeEach(() => {\r\n    // empty\r\n  });\r\n  \r\n  afterEach(function () {\r\n    spyHandler.test.calls.reset();\r\n    spyHandler.handle.calls.reset();\r\n  });\r\n\r\n  describe('SDK-to-REPORT', function () {\r\n    describe('load', function () {\r\n      it('POST /report/load returns 400 if the request is invalid', function (done) {\r\n        // Arrange\r\n        const testData = {\r\n          load: {\r\n            reportId: \"fakeId\",\r\n            accessToken: \"fakeToken\",\r\n            options: {\r\n            }\r\n          }\r\n        };\r\n        \r\n        iframeLoaded\r\n          .then(() => {\r\n            spyApp.validateLoad.and.returnValue(Promise.reject(null));\r\n            \r\n        // Act\r\n            hpm.post('/report/load', testData.load)\r\n              .then(() => {\r\n                expect(false).toBe(true);\r\n                spyApp.validateLoad.calls.reset();\r\n                done();\r\n              })\r\n              .catch((response: Hpm.IResponse) => {\r\n        // Assert\r\n                expect(spyApp.validateLoad).toHaveBeenCalledWith(testData.load);\r\n                expect(spyApp.load).not.toHaveBeenCalledWith(testData.load);\r\n                expect(response.statusCode).toEqual(400);\r\n        // Cleanup\r\n                spyApp.validateLoad.calls.reset();\r\n                done();\r\n              });\r\n          });\r\n      });\r\n      \r\n      it('POST /report/load returns 202 if the request is valid', function (done) {\r\n        // Arrange\r\n        const testData = {\r\n          load: {\r\n            reportId: \"fakeId\",\r\n            accessToken: \"fakeToken\",\r\n            options: {\r\n            }\r\n          }\r\n        };\r\n        \r\n        iframeLoaded\r\n          .then(() => {\r\n            spyApp.validateLoad.and.returnValue(Promise.resolve(null));\r\n        // Act\r\n            hpm.post('/report/load', testData.load)\r\n              .then((response: Hpm.IResponse) => {\r\n        // Assert\r\n                expect(spyApp.validateLoad).toHaveBeenCalledWith(testData.load);\r\n                expect(spyApp.load).toHaveBeenCalledWith(testData.load);\r\n                expect(response.statusCode).toEqual(202);\r\n        // Cleanup\r\n                spyApp.validateLoad.calls.reset();\r\n                spyApp.load.calls.reset();\r\n                done();\r\n              });\r\n          });\r\n      });\r\n      \r\n      it('POST /report/load causes POST /report/events/loaded', function (done) {\r\n        // Arrange\r\n        const testData = {\r\n          load: {\r\n            reportId: \"fakeId\",\r\n            accessToken: \"fakeToken\",\r\n            options: {\r\n              pageNavigationEnabled: false\r\n            }\r\n          },\r\n          expectedEvent: {\r\n            method: 'POST',\r\n            url: '/report/events/loaded',\r\n            body: {\r\n              initiator: 'sdk'\r\n            }\r\n          }\r\n        };\r\n        \r\n        iframeLoaded\r\n          .then(() => {\r\n            spyApp.load.and.returnValue(Promise.resolve(testData.load));\r\n            \r\n        // Act\r\n            hpm.post('/report/load', testData.load)\r\n              .then((response: Hpm.IResponse) => {\r\n                setTimeout(() => {\r\n        // Assert\r\n                  expect(spyApp.validateLoad).toHaveBeenCalledWith(testData.load);\r\n                  expect(spyApp.load).toHaveBeenCalledWith(testData.load);\r\n                  expect(spyHandler.handle).toHaveBeenCalledWith(jasmine.objectContaining(testData.expectedEvent));\r\n        // Cleanup\r\n                  spyApp.validateLoad.calls.reset();\r\n                  spyApp.load.calls.reset();\r\n                  done();\r\n                });\r\n              });\r\n          });\r\n      });\r\n    });\r\n    \r\n    describe('pages', function () {\r\n      \r\n      it('GET /report/pages returns 200 with body as array of pages', function (done) {\r\n        // Arrange\r\n        const testData = {\r\n          expectedPages: [\r\n            {\r\n              name: \"a\"\r\n            },\r\n            {\r\n              name: \"b\"\r\n            }\r\n          ]\r\n        };\r\n        \r\n        iframeLoaded\r\n          .then(() => {\r\n            spyApp.getPages.and.returnValue(Promise.resolve(testData.expectedPages));\r\n        // Act\r\n            hpm.get('/report/pages')\r\n              .then((response: Hpm.IResponse) => {\r\n        // Assert\r\n                expect(spyApp.getPages).toHaveBeenCalled();\r\n                const pages = response.body;\r\n                expect(pages).toEqual(testData.expectedPages);\r\n        // Cleanup\r\n                spyApp.getPages.calls.reset();\r\n                done();\r\n              });\r\n          });\r\n      });\r\n      \r\n      it('PUT /report/pages/active returns 400 if request is invalid', function (done) {\r\n        // Arrange\r\n        const testData = {\r\n          page: {\r\n            name: \"fakeName\",\r\n            displayName: \"fakeDisplayName\"\r\n          }\r\n        };\r\n        \r\n        iframeLoaded\r\n          .then(() => {\r\n            spyApp.validatePage.and.returnValue(Promise.reject(null));\r\n        // Act\r\n            hpm.put('/report/pages/active', testData.page)\r\n              .catch((response: Hpm.IResponse) => {\r\n        // Assert\r\n                expect(spyApp.validatePage).toHaveBeenCalledWith(testData.page);\r\n                expect(spyApp.setActivePage).not.toHaveBeenCalled();\r\n                expect(response.statusCode).toEqual(400);\r\n        // Cleanup\r\n                spyApp.validatePage.calls.reset();\r\n                spyApp.setActivePage.calls.reset();\r\n                done();\r\n              });\r\n          });\r\n      });\r\n      \r\n      it('PUT /report/pages/active returns 202 if request is valid', function (done) {\r\n        // Arrange\r\n        const testData = {\r\n          page: {\r\n            name: \"fakeName\",\r\n            displayName: \"fakeDisplayName\"\r\n          }\r\n        };\r\n        \r\n        iframeLoaded\r\n          .then(() => {\r\n            spyApp.validatePage.and.returnValue(Promise.resolve(null));\r\n\r\n        // Act\r\n            hpm.put('/report/pages/active', testData.page)\r\n              .then((response: Hpm.IResponse) => {\r\n        // Assert\r\n                expect(spyApp.validatePage).toHaveBeenCalledWith(testData.page);\r\n                expect(spyApp.setActivePage).toHaveBeenCalledWith(testData.page);\r\n                expect(response.statusCode).toEqual(202);\r\n        // Cleanup\r\n                spyApp.validatePage.calls.reset();\r\n                spyApp.setActivePage.calls.reset();\r\n                done();\r\n              });\r\n          });\r\n      });\r\n      \r\n      it('PUT /report/pages/active causes POST /report/events/pageChanged', function (done) {\r\n        // Arrange\r\n        const testData = {\r\n          page: {\r\n            name: \"fakeName\",\r\n            displayName: \"fakeDisplayName\"\r\n          },\r\n          expectedEvent: {\r\n            method: 'POST',\r\n            url: '/report/events/pageChanged',\r\n            body: jasmine.objectContaining({\r\n              initiator: 'sdk'\r\n            })\r\n          }\r\n        };\r\n        \r\n        iframeLoaded\r\n          .then(() => {\r\n            spyApp.validatePage.and.returnValue(Promise.resolve(null));\r\n\r\n        // Act\r\n            hpm.put('/report/pages/active', testData.page)\r\n              .then((response: Hpm.IResponse) => {\r\n        // Assert\r\n                expect(spyApp.validatePage).toHaveBeenCalledWith(testData.page);\r\n                expect(spyApp.setActivePage).toHaveBeenCalledWith(testData.page);\r\n                expect(response.statusCode).toEqual(202);\r\n                expect(spyHandler.handle).toHaveBeenCalledWith(jasmine.objectContaining(testData.expectedEvent));\r\n        // Cleanup\r\n                spyApp.validateLoad.calls.reset();\r\n                spyApp.setActivePage.calls.reset();\r\n                done();\r\n              });\r\n          });\r\n      });\r\n    });\r\n    \r\n    describe('filters (report level)', function () {\r\n      \r\n      it('GET /report/filters returns 200 with body as array of filters', function (done) {\r\n        // Arrange\r\n        const testData = {\r\n          filters: [\r\n            {\r\n              name: \"fakeFilter1\"\r\n            },\r\n            {\r\n              name: \"fakeFilter2\"\r\n            }\r\n          ]\r\n        };\r\n        \r\n        iframeLoaded\r\n          .then(() => {\r\n            spyApp.getFilters.and.returnValue(Promise.resolve(testData.filters));\r\n            \r\n        // Act\r\n            hpm.get('/report/filters')\r\n              .then((response: Hpm.IResponse) => {\r\n        // Assert\r\n                expect(spyApp.getFilters).toHaveBeenCalled();\r\n                expect(response.statusCode).toEqual(200);\r\n                expect(response.body).toEqual(testData.filters);\r\n        // Cleanup\r\n                spyApp.getFilters.calls.reset();\r\n                done();\r\n              });\r\n          });\r\n      });\r\n      \r\n      it('POST /report/filters returns 400 if request is invalid', function (done) {\r\n        // Arrange\r\n        const testData = {\r\n          filter: {\r\n            name: \"fakeFilter\"\r\n          }\r\n        };\r\n        \r\n        iframeLoaded\r\n          .then(() => {\r\n            spyApp.validateFilter.and.returnValue(Promise.reject(null));\r\n\r\n        // Act\r\n            hpm.post('/report/filters', testData.filter)\r\n              .catch((response: Hpm.IResponse) => {\r\n        // Assert\r\n                expect(spyApp.validateFilter).toHaveBeenCalledWith(testData.filter);\r\n                expect(spyApp.addFilter).not.toHaveBeenCalled();\r\n                expect(response.statusCode).toEqual(400);\r\n        // Cleanup\r\n                spyApp.validateFilter.calls.reset();\r\n                done();\r\n              });\r\n          });\r\n      });\r\n      \r\n      it('POST /report/filters returns 202 if request is valid', function (done) {\r\n        // Arrange\r\n        const testData = {\r\n          filter: {\r\n            name: \"fakeFilter\"\r\n          }\r\n        };\r\n        \r\n        iframeLoaded\r\n          .then(() => {\r\n            spyApp.validateFilter.and.returnValue(Promise.resolve(null));\r\n\r\n        // Act\r\n            hpm.post('/report/filters', testData.filter)\r\n              .then((response: Hpm.IResponse) => {\r\n        // Assert\r\n                expect(spyApp.validateFilter).toHaveBeenCalledWith(testData.filter);\r\n                expect(spyApp.addFilter).toHaveBeenCalledWith(testData.filter);\r\n                expect(response.statusCode).toEqual(202);\r\n        // Cleanup\r\n                spyApp.validateFilter.calls.reset();\r\n                spyApp.addFilter.calls.reset();\r\n                done();\r\n              });\r\n          });\r\n      });\r\n      \r\n      it('POST /report/filters will cause POST /report/events/filterAdded', function (done) {\r\n        // Arrange\r\n        const testData = {\r\n          filter: {\r\n            name: \"fakeFilter\"\r\n          },\r\n          expectedEvent: {\r\n            method: 'POST',\r\n            url: '/report/events/filterAdded'\r\n          }\r\n        };\r\n        \r\n        iframeLoaded\r\n          .then(() => {\r\n            spyApp.validateFilter.and.returnValue(Promise.resolve(null));\r\n\r\n        // Act\r\n            hpm.post('/report/filters', testData.filter)\r\n              .then((response: Hpm.IResponse) => {\r\n        // Assert\r\n                expect(spyApp.validateFilter).toHaveBeenCalledWith(testData.filter);\r\n                expect(spyApp.addFilter).toHaveBeenCalledWith(testData.filter);\r\n                expect(response.statusCode).toEqual(202);\r\n                expect(spyHandler.handle).toHaveBeenCalledWith(jasmine.objectContaining(testData.expectedEvent));\r\n        // Cleanup\r\n                spyApp.validateFilter.calls.reset();\r\n                spyApp.addFilter.calls.reset();\r\n                done();\r\n              });\r\n          });\r\n      });\r\n      \r\n      it('PUT /report/filters returns 400 if request is invalid', function (done) {\r\n        // Arrange\r\n        const testData = {\r\n          filter: {\r\n            name: \"fakeFilter\"\r\n          }\r\n        };\r\n        \r\n        iframeLoaded\r\n          .then(() => {\r\n            spyApp.validateFilter.and.returnValue(Promise.reject(null));\r\n\r\n        // Act\r\n            hpm.put('/report/filters', testData.filter)\r\n              .catch((response: Hpm.IResponse) => {\r\n        // Assert\r\n                expect(spyApp.validateFilter).toHaveBeenCalledWith(testData.filter);\r\n                expect(spyApp.updateFilter).not.toHaveBeenCalled();\r\n                expect(response.statusCode).toEqual(400);\r\n        // Cleanup\r\n                spyApp.validateFilter.calls.reset();\r\n                done();\r\n              });\r\n          });\r\n      });\r\n      \r\n      it('PUT /report/filters returns 202 if request is valid', function (done) {\r\n        // Arrange\r\n        const testData = {\r\n          filter: {\r\n            name: \"fakeFilter\"\r\n          }\r\n        };\r\n        \r\n        iframeLoaded\r\n          .then(() => {\r\n            spyApp.validateFilter.and.returnValue(Promise.resolve(null));\r\n\r\n        // Act\r\n            hpm.put('/report/filters', testData.filter)\r\n              .then((response: Hpm.IResponse) => {\r\n        // Assert\r\n                expect(spyApp.validateFilter).toHaveBeenCalledWith(testData.filter);\r\n                expect(spyApp.updateFilter).toHaveBeenCalledWith(testData.filter);\r\n                expect(response.statusCode).toEqual(202);\r\n        // Cleanup\r\n                spyApp.validateFilter.calls.reset();\r\n                spyApp.updateFilter.calls.reset();\r\n                done();\r\n              });\r\n          });\r\n      });\r\n      \r\n      it('PUT /report/filters will cause POST /report/events/filterUpdated', function (done) {\r\n        // Arrange\r\n        const testData = {\r\n          filter: {\r\n            name: \"fakeFilter\"\r\n          },\r\n          expectedEvent: {\r\n            method: 'POST',\r\n            url: '/report/events/filterUpdated'\r\n          }\r\n        };\r\n        \r\n        iframeLoaded\r\n          .then(() => {\r\n            spyApp.validateFilter.and.returnValue(Promise.resolve(null));\r\n\r\n        // Act\r\n            hpm.put('/report/filters', testData.filter)\r\n              .then((response: Hpm.IResponse) => {\r\n        // Assert\r\n                expect(spyApp.validateFilter).toHaveBeenCalledWith(testData.filter);\r\n                expect(spyApp.updateFilter).toHaveBeenCalledWith(testData.filter);\r\n                expect(response.statusCode).toEqual(202);\r\n                expect(spyHandler.handle).toHaveBeenCalledWith(jasmine.objectContaining(testData.expectedEvent));\r\n        // Cleanup\r\n                spyApp.validateFilter.calls.reset();\r\n                spyApp.updateFilter.calls.reset();\r\n                done();\r\n              });\r\n          });\r\n      });\r\n      \r\n      it('DELETE /report/filters returns 202 if request is valid', function (done) {\r\n        // Arrange\r\n        iframeLoaded\r\n          .then(() => {\r\n        // Act\r\n            hpm.delete('/report/filters')\r\n              .then((response: Hpm.IResponse) => {\r\n        // Assert\r\n                expect(spyApp.clearFilters).toHaveBeenCalled();\r\n                expect(response.statusCode).toEqual(202);\r\n        // Cleanup\r\n                spyApp.clearFilters.calls.reset();\r\n                done();\r\n              });\r\n          });\r\n      });\r\n      \r\n      it('DELETE /report/filters causes POST /report/events/filtersCleared', function (done) {\r\n        // Arrange\r\n        const testData = {\r\n          expectedEvent: {\r\n            method: 'POST',\r\n            url: '/report/events/filtersCleared'\r\n          }\r\n        };\r\n        \r\n        iframeLoaded\r\n          .then(() => {\r\n            \r\n        // Act\r\n            hpm.delete('/report/filters')\r\n              .then((response: Hpm.IResponse) => {\r\n        // Assert\r\n                setTimeout(() => {\r\n                  expect(spyApp.clearFilters).toHaveBeenCalled();\r\n                  expect(response.statusCode).toEqual(202);\r\n                  expect(spyHandler.handle).toHaveBeenCalledWith(jasmine.objectContaining(testData.expectedEvent));\r\n        // Cleanup\r\n                  spyApp.clearFilters.calls.reset();\r\n                  done();\r\n                })\r\n              });\r\n          });\r\n      });\r\n    });\r\n    \r\n    describe('settings', function () {\r\n      \r\n      it('PATCH /report/settings returns 400 if request is invalid', function (done) {\r\n        // Arrange\r\n        const testData = {\r\n          settings: {\r\n            filterPaneEnabled: false,\r\n            pageNavigationEnabled: false\r\n          }\r\n        };\r\n        \r\n        iframeLoaded\r\n          .then(() => {\r\n            spyApp.validateSettings.and.returnValue(Promise.reject(null));\r\n            \r\n        // Act\r\n            hpm.patch('/report/settings', testData.settings)\r\n              .catch((response: Hpm.IResponse) => {\r\n        // Assert\r\n                expect(spyApp.validateSettings).toHaveBeenCalledWith(testData.settings);\r\n                expect(spyApp.updateSettings).not.toHaveBeenCalled();\r\n                expect(response.statusCode).toEqual(400);\r\n        // Cleanup\r\n                spyApp.validateSettings.calls.reset();\r\n                done();\r\n              });\r\n          });\r\n      });\r\n      \r\n      it('PATCH /report/settings returns 202 if request is valid', function (done) {\r\n        // Arrange\r\n        const testData = {\r\n          settings: {\r\n            filterPaneEnabled: false,\r\n            pageNavigationEnabled: false\r\n          }\r\n        };\r\n        \r\n        iframeLoaded\r\n          .then(() => {\r\n            spyApp.validateSettings.and.returnValue(Promise.resolve(null));\r\n            \r\n        // Act\r\n            hpm.patch('/report/settings', testData.settings)\r\n              .then((response: Hpm.IResponse) => {\r\n        // Assert\r\n                expect(spyApp.validateSettings).toHaveBeenCalledWith(testData.settings);\r\n                expect(spyApp.updateSettings).toHaveBeenCalledWith(testData.settings);\r\n                expect(response.statusCode).toEqual(202);\r\n        // Cleanup\r\n                spyApp.validateSettings.calls.reset();\r\n                spyApp.updateSettings.calls.reset();\r\n                done();\r\n              });\r\n          });\r\n      });\r\n      \r\n      it('PATCH /report/settings causes POST /report/events/settingsUpdated', function (done) {\r\n        // Arrange\r\n        const testData = {\r\n          settings: {\r\n            filterPaneEnabled: false\r\n          },\r\n          expectedEvent: {\r\n            method: 'POST',\r\n            url: '/report/events/settingsUpdated',\r\n            body: {\r\n              initiator: 'sdk',\r\n              settings: {\r\n                filterPaneEnabled: false,\r\n                pageNavigationEnabled: false\r\n              }\r\n            }\r\n          }\r\n        };\r\n        \r\n        iframeLoaded\r\n          .then(() => {\r\n            spyApp.validateSettings.and.returnValue(Promise.resolve(null));\r\n            spyApp.updateSettings.and.returnValue(Promise.resolve(testData.expectedEvent.body.settings));\r\n            \r\n        // Act\r\n            hpm.patch('/report/settings', testData.settings)\r\n              .then((response: Hpm.IResponse) => {\r\n        // Assert\r\n                setTimeout(() => {\r\n                  expect(spyApp.validateSettings).toHaveBeenCalledWith(testData.settings);\r\n                  expect(spyApp.updateSettings).toHaveBeenCalledWith(testData.settings);\r\n                  expect(response.statusCode).toEqual(202);\r\n                  expect(spyHandler.handle).toHaveBeenCalledWith(jasmine.objectContaining(testData.expectedEvent));\r\n        // Cleanup\r\n                  spyApp.validateSettings.calls.reset();\r\n                  spyApp.updateSettings.calls.reset();\r\n                  \r\n                  done();\r\n                });\r\n              });\r\n          });\r\n      });\r\n    });\r\n  });\r\n  \r\n  describe('REPORT-to-SDK', function () {\r\n    describe('pages', function () {\r\n      it('POST /report/events/pageChanged when user changes page', function (done) {\r\n        // Arrange\r\n        const testData = {\r\n          event: {\r\n            initiator: 'user',\r\n            page: {\r\n              name: \"fakePageName\"\r\n            }\r\n          }\r\n        };\r\n        const testExpectedRequest = {\r\n          method: 'POST',\r\n          url: '/report/events/pageChanged',\r\n          body: testData.event\r\n        };\r\n        \r\n        iframeLoaded\r\n          .then(() => {\r\n            \r\n        // Act\r\n            iframeHpm.post('/report/events/pageChanged', testData.event)\r\n              .then((response: Hpm.IResponse) => {\r\n        // Assert\r\n                expect(response.statusCode).toBe(202);\r\n                expect(spyHandler.handle).toHaveBeenCalledWith(jasmine.objectContaining(testExpectedRequest));\r\n                \r\n                done();\r\n              });\r\n        \r\n        // Cleanup\r\n          });\r\n      });\r\n    });\r\n    \r\n    describe('filters (report level)', function () {\r\n      it('POST /report/events/filterAdded when user adds filter', function (done) {\r\n        // Arrange\r\n        const testData = {\r\n          event: {\r\n            initiator: 'user',\r\n            filter: {\r\n              name: \"fakeFilter\"\r\n            }\r\n          }\r\n        };\r\n        const testExpectedRequest = {\r\n          method: 'POST',\r\n          url: '/report/events/filterAdded',\r\n          body: testData.event\r\n        };\r\n        \r\n        iframeLoaded\r\n          .then(() => {\r\n            \r\n        // Act\r\n            iframeHpm.post('/report/events/filterAdded', testData.event)\r\n              .then((response: Hpm.IResponse) => {\r\n        // Assert\r\n                expect(response.statusCode).toBe(202);\r\n                expect(spyHandler.handle).toHaveBeenCalledWith(jasmine.objectContaining(testExpectedRequest));\r\n                \r\n                done();\r\n              });\r\n        \r\n        // Cleanup\r\n          });\r\n      });\r\n      \r\n      it('POST /report/events/filterUpdated when user changes filter', function (done) {\r\n        // Arrange\r\n        const testData = {\r\n          event: {\r\n            initiator: 'user',\r\n            filter: {\r\n              name: \"fakeFilter\"\r\n            }\r\n          }\r\n        };\r\n        const testExpectedRequest = {\r\n          method: 'POST',\r\n          url: '/report/events/filterUpdated',\r\n          body: testData.event\r\n        };\r\n        \r\n        iframeLoaded\r\n          .then(() => {\r\n            \r\n        // Act\r\n            iframeHpm.post('/report/events/filterUpdated', testData.event)\r\n              .then((response: Hpm.IResponse) => {\r\n        // Assert\r\n                expect(response.statusCode).toBe(202);\r\n                expect(spyHandler.handle).toHaveBeenCalledWith(jasmine.objectContaining(testExpectedRequest));\r\n                \r\n                done();\r\n              });\r\n        \r\n        // Cleanup\r\n          });\r\n      });\r\n    \r\n      it('POST /report/events/filterRemoved when user removes filter', function (done) {\r\n        // Arrange\r\n        const testData = {\r\n          event: {\r\n            initiator: 'user',\r\n            filter: {\r\n              name: \"fakeFilter\"\r\n            }\r\n          }\r\n        };\r\n        const testExpectedRequest = {\r\n          method: 'POST',\r\n          url: '/report/events/filterRemoved',\r\n          body: testData.event\r\n        };\r\n        \r\n        iframeLoaded\r\n          .then(() => {\r\n            \r\n        // Act\r\n            iframeHpm.post('/report/events/filterRemoved', testData.event)\r\n              .then((response: Hpm.IResponse) => {\r\n        // Assert\r\n                expect(response.statusCode).toBe(202);\r\n                expect(spyHandler.handle).toHaveBeenCalledWith(jasmine.objectContaining(testExpectedRequest));\r\n                \r\n                done();\r\n              });\r\n        \r\n        // Cleanup\r\n          });\r\n      });\r\n    });\r\n    \r\n    describe('settings', function () {\r\n      it('POST /report/events/settingsUpdated when user changes settings', function (done) {\r\n        // Arrange\r\n        const testData = {\r\n          event: {\r\n            initiator: 'user',\r\n            settings: {\r\n              pageNavigationEnabled: true\r\n            }\r\n          }\r\n        };\r\n        const testExpectedRequest = {\r\n          method: 'POST',\r\n          url: '/report/events/settingsUpdated',\r\n          body: testData.event\r\n        };\r\n        \r\n        iframeLoaded\r\n          .then(() => {\r\n            \r\n        // Act\r\n            iframeHpm.post('/report/events/settingsUpdated', testData.event)\r\n              .then((response: Hpm.IResponse) => {\r\n        // Assert\r\n                expect(response.statusCode).toBe(202);\r\n                expect(spyHandler.handle).toHaveBeenCalledWith(jasmine.objectContaining(testExpectedRequest));\r\n                \r\n                done();\r\n              });\r\n        \r\n        // Cleanup\r\n          });\r\n      });\r\n    });\r\n    \r\n    describe('data selection', function () {\r\n      it('POST /report/events/dataSelected when user selects data', function (done) {\r\n        // Arrange\r\n        const testData = {\r\n          event: {\r\n            initiator: 'user',\r\n            selection: {\r\n              data: true\r\n            }\r\n          }\r\n        };\r\n        const testExpectedRequest = {\r\n          method: 'POST',\r\n          url: '/report/events/dataSelected',\r\n          body: testData.event\r\n        };\r\n        \r\n        iframeLoaded\r\n          .then(() => {\r\n            \r\n        // Act\r\n            iframeHpm.post('/report/events/dataSelected', testData.event)\r\n              .then((response: Hpm.IResponse) => {\r\n        // Assert\r\n                expect(response.statusCode).toBe(202);\r\n                expect(spyHandler.handle).toHaveBeenCalledWith(jasmine.objectContaining(testExpectedRequest));\r\n                done();\r\n              });\r\n        \r\n        // Cleanup\r\n          });\r\n      });\r\n    });\r\n  });\r\n});\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./e2e/protocol.e2e.spec.ts\n **/","(function (factory) {\r\n    if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        var v = factory(require, exports); if (v !== undefined) module.exports = v;\r\n    }\r\n    else if (typeof define === 'function' && define.amd) {\r\n        define([\"require\", \"exports\"], factory);\r\n    }\r\n})(function (require, exports) {\r\n    \"use strict\";\r\n    var WindowPostMessageProxy = (function () {\r\n        function WindowPostMessageProxy(contentWindow, options) {\r\n            var _this = this;\r\n            if (options === void 0) { options = {\r\n                processTrackingProperties: {\r\n                    addTrackingProperties: WindowPostMessageProxy.defaultAddTrackingProperties,\r\n                    getTrackingProperties: WindowPostMessageProxy.defaultGetTrackingProperties\r\n                },\r\n                isErrorMessage: WindowPostMessageProxy.defaultIsErrorMessage,\r\n                receiveWindow: window,\r\n                name: WindowPostMessageProxy.createRandomString()\r\n            }; }\r\n            this.pendingRequestPromises = {};\r\n            // save contentWindow\r\n            this.contentWindow = contentWindow;\r\n            // save options with defaults\r\n            this.addTrackingProperties = (options.processTrackingProperties && options.processTrackingProperties.addTrackingProperties) || WindowPostMessageProxy.defaultAddTrackingProperties;\r\n            this.getTrackingProperties = (options.processTrackingProperties && options.processTrackingProperties.getTrackingProperties) || WindowPostMessageProxy.defaultGetTrackingProperties;\r\n            this.isErrorMessage = options.isErrorMessage || WindowPostMessageProxy.defaultIsErrorMessage;\r\n            this.receiveWindow = options.receiveWindow || window;\r\n            this.name = options.name || WindowPostMessageProxy.createRandomString();\r\n            this.logMessages = options.logMessages || false;\r\n            // Initialize\r\n            this.handlers = [];\r\n            this.windowMessageHandler = function (event) { return _this.onMessageReceived(event); };\r\n            this.start();\r\n        }\r\n        // Static\r\n        WindowPostMessageProxy.defaultAddTrackingProperties = function (message, trackingProperties) {\r\n            message[WindowPostMessageProxy.messagePropertyName] = trackingProperties;\r\n            return message;\r\n        };\r\n        WindowPostMessageProxy.defaultGetTrackingProperties = function (message) {\r\n            return message[WindowPostMessageProxy.messagePropertyName];\r\n        };\r\n        WindowPostMessageProxy.defaultIsErrorMessage = function (message) {\r\n            return !!message.error;\r\n        };\r\n        /**\r\n         * Adds handler.\r\n         * If the first handler whose test method returns true will handle the message and provide a response.\r\n         */\r\n        WindowPostMessageProxy.prototype.addHandler = function (handler) {\r\n            this.handlers.push(handler);\r\n        };\r\n        /**\r\n         * Removes handler.\r\n         * The reference must match the original object that was provided when adding the handler.\r\n         */\r\n        WindowPostMessageProxy.prototype.removeHandler = function (handler) {\r\n            var handlerIndex = this.handlers.indexOf(handler);\r\n            if (handlerIndex == -1) {\r\n                throw new Error(\"You attempted to remove a handler but no matching handler was found.\");\r\n            }\r\n            this.handlers.splice(handlerIndex, 1);\r\n        };\r\n        /**\r\n         * Start listening to message events.\r\n         */\r\n        WindowPostMessageProxy.prototype.start = function () {\r\n            this.receiveWindow.addEventListener('message', this.windowMessageHandler);\r\n        };\r\n        /**\r\n         * Stops listening to message events.\r\n         */\r\n        WindowPostMessageProxy.prototype.stop = function () {\r\n            this.receiveWindow.removeEventListener('message', this.windowMessageHandler);\r\n        };\r\n        /**\r\n         * Post message to target window with tracking properties added and save deferred object referenced by tracking id.\r\n         */\r\n        WindowPostMessageProxy.prototype.postMessage = function (message) {\r\n            // Add tracking properties to indicate message came from this proxy\r\n            var trackingProperties = { id: WindowPostMessageProxy.createRandomString() };\r\n            this.addTrackingProperties(message, trackingProperties);\r\n            if (this.logMessages) {\r\n                console.log(this.name + \" Posting message:\");\r\n                console.log(JSON.stringify(message, null, '  '));\r\n            }\r\n            this.contentWindow.postMessage(message, \"*\");\r\n            var deferred = WindowPostMessageProxy.createDeferred();\r\n            this.pendingRequestPromises[trackingProperties.id] = deferred;\r\n            return deferred.promise;\r\n        };\r\n        /**\r\n         * Send response message to target window.\r\n         * Response messages re-use tracking properties from a previous request message.\r\n         */\r\n        WindowPostMessageProxy.prototype.sendResponse = function (message, trackingProperties) {\r\n            this.addTrackingProperties(message, trackingProperties);\r\n            if (this.logMessages) {\r\n                console.log(this.name + \" Sending response:\");\r\n                console.log(JSON.stringify(message, null, '  '));\r\n            }\r\n            this.contentWindow.postMessage(message, \"*\");\r\n        };\r\n        /**\r\n         * Message handler.\r\n         */\r\n        WindowPostMessageProxy.prototype.onMessageReceived = function (event) {\r\n            var _this = this;\r\n            if (this.logMessages) {\r\n                console.log(this.name + \" Received message:\");\r\n                console.log(\"type: \" + event.type);\r\n                console.log(JSON.stringify(event.data, null, '  '));\r\n            }\r\n            var message = event.data;\r\n            var trackingProperties = this.getTrackingProperties(message);\r\n            // If this proxy instance could not find tracking properties then disregard message since we can't reliably respond\r\n            if (!trackingProperties) {\r\n                return;\r\n            }\r\n            var deferred = this.pendingRequestPromises[trackingProperties.id];\r\n            // If message does not have a known ID, treat it as a request\r\n            // Otherwise, treat message as response\r\n            if (!deferred) {\r\n                var handled = this.handlers.some(function (handler) {\r\n                    if (handler.test(message)) {\r\n                        Promise.resolve(handler.handle(message))\r\n                            .then(function (responseMessage) {\r\n                            _this.sendResponse(responseMessage, trackingProperties);\r\n                        });\r\n                        return true;\r\n                    }\r\n                });\r\n                /**\r\n                 * TODO: Consider returning an error message if nothing handled the message.\r\n                 * In the case of the Report receiving messages all of them should be handled,\r\n                 * however, in the case of the SDK receiving messages it's likely it won't register handlers\r\n                 * for all events. Perhaps make this an option at construction time.\r\n                 */\r\n                if (!handled) {\r\n                    console.warn(\"Proxy(\" + this.name + \") did not handle message. Handlers: \" + this.handlers.length + \"  Message: \" + JSON.stringify(message, null, '') + \".\");\r\n                }\r\n            }\r\n            else {\r\n                /**\r\n                 * If error message reject promise,\r\n                 * Otherwise, resolve promise\r\n                 */\r\n                if (this.isErrorMessage(message)) {\r\n                    deferred.reject(message);\r\n                }\r\n                else {\r\n                    deferred.resolve(message);\r\n                }\r\n                // TODO: Move to .finally clause up where promise is created for better maitenance like original proxy code.\r\n                delete this.pendingRequestPromises[trackingProperties.id];\r\n            }\r\n        };\r\n        /**\r\n         * Utility to create a deferred object.\r\n         */\r\n        // TODO: Look to use RSVP library instead of doing this manually.\r\n        // From what I searched RSVP would work better because it has .finally and .deferred; however, it doesn't have Typings information. \r\n        WindowPostMessageProxy.createDeferred = function () {\r\n            var deferred = {\r\n                resolve: null,\r\n                reject: null,\r\n                promise: null\r\n            };\r\n            var promise = new Promise(function (resolve, reject) {\r\n                deferred.resolve = resolve;\r\n                deferred.reject = reject;\r\n            });\r\n            deferred.promise = promise;\r\n            return deferred;\r\n        };\r\n        /**\r\n         * Utility to generate random sequence of characters used as tracking id for promises.\r\n         */\r\n        WindowPostMessageProxy.createRandomString = function () {\r\n            return (Math.random() + 1).toString(36).substring(7);\r\n        };\r\n        WindowPostMessageProxy.messagePropertyName = \"windowPostMessageProxy\";\r\n        return WindowPostMessageProxy;\r\n    }());\r\n    exports.WindowPostMessageProxy = WindowPostMessageProxy;\r\n});\r\n//# sourceMappingURL=windowPostMessageProxy.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/window-post-message-proxy/dist/windowPostMessageProxy.js\n ** module id = 1\n ** module chunks = 0\n **/","var map = {\n\t\"./windowPostMessageProxy\": 1,\n\t\"./windowPostMessageProxy.js\": 1\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\treturn map[req] || (function() { throw new Error(\"Cannot find module '\" + req + \"'.\") }());\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 2;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/window-post-message-proxy/dist ^\\.\\/.*$\n ** module id = 2\n ** module chunks = 0\n **/","(function (factory) {\r\n    if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        var v = factory(require, exports); if (v !== undefined) module.exports = v;\r\n    }\r\n    else if (typeof define === 'function' && define.amd) {\r\n        define([\"require\", \"exports\"], factory);\r\n    }\r\n})(function (require, exports) {\r\n    \"use strict\";\r\n    var HttpPostMessage = (function () {\r\n        function HttpPostMessage(windowPostMessageProxy, defaultHeaders) {\r\n            if (defaultHeaders === void 0) { defaultHeaders = {}; }\r\n            this.defaultHeaders = defaultHeaders;\r\n            this.windowPostMessageProxy = windowPostMessageProxy;\r\n        }\r\n        // TODO: I the responsibility of knowing how to configure windowPostMessageProxy should\r\n        // live in this class, but then we have to have hard dependency for things like ITrackingProperties\r\n        HttpPostMessage.addTrackingProperties = function (message, trackingProperties) {\r\n            message.headers = message.headers || {};\r\n            message.headers.id = trackingProperties.id;\r\n            return message;\r\n        };\r\n        HttpPostMessage.getTrackingProperties = function (message) {\r\n            return {\r\n                id: message.headers.id\r\n            };\r\n        };\r\n        HttpPostMessage.isErrorMessage = function (message) {\r\n            return !(200 <= message.statusCode && message.statusCode < 300);\r\n        };\r\n        HttpPostMessage.prototype.get = function (url, headers) {\r\n            if (headers === void 0) { headers = {}; }\r\n            return this.send({\r\n                method: \"GET\",\r\n                url: url,\r\n                headers: headers\r\n            });\r\n        };\r\n        HttpPostMessage.prototype.post = function (url, body, headers) {\r\n            if (headers === void 0) { headers = {}; }\r\n            return this.send({\r\n                method: \"POST\",\r\n                url: url,\r\n                headers: headers,\r\n                body: body\r\n            });\r\n        };\r\n        HttpPostMessage.prototype.put = function (url, body, headers) {\r\n            if (headers === void 0) { headers = {}; }\r\n            return this.send({\r\n                method: \"PUT\",\r\n                url: url,\r\n                headers: headers,\r\n                body: body\r\n            });\r\n        };\r\n        HttpPostMessage.prototype.patch = function (url, body, headers) {\r\n            if (headers === void 0) { headers = {}; }\r\n            return this.send({\r\n                method: \"PATCH\",\r\n                url: url,\r\n                headers: headers,\r\n                body: body\r\n            });\r\n        };\r\n        HttpPostMessage.prototype.delete = function (url, headers) {\r\n            if (headers === void 0) { headers = {}; }\r\n            return this.send({\r\n                method: \"DELETE\",\r\n                url: url,\r\n                headers: headers\r\n            });\r\n        };\r\n        HttpPostMessage.prototype.send = function (request) {\r\n            this.assign(request.headers, this.defaultHeaders);\r\n            return this.windowPostMessageProxy.postMessage(request);\r\n        };\r\n        /**\r\n         * Object.assign() polyfill\r\n         * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\r\n         */\r\n        HttpPostMessage.prototype.assign = function (target) {\r\n            var sources = [];\r\n            for (var _i = 1; _i < arguments.length; _i++) {\r\n                sources[_i - 1] = arguments[_i];\r\n            }\r\n            if (target === undefined || target === null) {\r\n                throw new TypeError('Cannot convert undefined or null to object');\r\n            }\r\n            var output = Object(target);\r\n            sources.forEach(function (source) {\r\n                if (source !== undefined && source !== null) {\r\n                    for (var nextKey in source) {\r\n                        if (Object.prototype.hasOwnProperty.call(source, nextKey)) {\r\n                            output[nextKey] = source[nextKey];\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n            return output;\r\n        };\r\n        return HttpPostMessage;\r\n    }());\r\n    exports.HttpPostMessage = HttpPostMessage;\r\n});\r\n//# sourceMappingURL=httpPostMessage.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/http-post-message/dist/httpPostMessage.js\n ** module id = 5\n ** module chunks = 0\n **/","var map = {\n\t\"./httpPostMessage\": 5,\n\t\"./httpPostMessage.js\": 5\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\treturn map[req] || (function() { throw new Error(\"Cannot find module '\" + req + \"'.\") }());\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 6;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/http-post-message/dist ^\\.\\/.*$\n ** module id = 6\n ** module chunks = 0\n **/","(function (factory) {\r\n    if (typeof module === 'object' && typeof module.exports === 'object') {\r\n        var v = factory(require, exports); if (v !== undefined) module.exports = v;\r\n    }\r\n    else if (typeof define === 'function' && define.amd) {\r\n        define([\"require\", \"exports\"], factory);\r\n    }\r\n})(function (require, exports) {\r\n    \"use strict\";\r\n    var Router = (function () {\r\n        function Router(handlers) {\r\n            this.handlers = handlers;\r\n        }\r\n        Router.prototype.get = function (url, handler) {\r\n            this.registerHandler(\"GET\", url, handler);\r\n            return this;\r\n        };\r\n        Router.prototype.patch = function (url, handler) {\r\n            this.registerHandler(\"PATCH\", url, handler);\r\n            return this;\r\n        };\r\n        Router.prototype.post = function (url, handler) {\r\n            this.registerHandler(\"POST\", url, handler);\r\n            return this;\r\n        };\r\n        Router.prototype.put = function (url, handler) {\r\n            this.registerHandler(\"PUT\", url, handler);\r\n            return this;\r\n        };\r\n        Router.prototype.delete = function (url, handler) {\r\n            this.registerHandler(\"DELETE\", url, handler);\r\n            return this;\r\n        };\r\n        Router.prototype.registerHandler = function (method, url, handler) {\r\n            var internalHandler = {\r\n                test: function (request) {\r\n                    return (request.method === method\r\n                        && request.url === url);\r\n                },\r\n                handle: function (request) {\r\n                    var response = new Response();\r\n                    return Promise.resolve(handler(request, response))\r\n                        .then(function (x) { return response; });\r\n                }\r\n            };\r\n            this.handlers.addHandler(internalHandler);\r\n        };\r\n        return Router;\r\n    }());\r\n    exports.Router = Router;\r\n    var Response = (function () {\r\n        function Response() {\r\n            this.statusCode = 200;\r\n            this.headers = {};\r\n            this.body = null;\r\n        }\r\n        Response.prototype.send = function (statusCode, body) {\r\n            this.statusCode = statusCode;\r\n            this.body = body;\r\n        };\r\n        return Response;\r\n    }());\r\n    exports.Response = Response;\r\n});\r\n//# sourceMappingURL=router.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/powerbi-router/dist/router.js\n ** module id = 9\n ** module chunks = 0\n **/","var map = {\n\t\"./router\": 9,\n\t\"./router.js\": 9\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\treturn map[req] || (function() { throw new Error(\"Cannot find module '\" + req + \"'.\") }());\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 10;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/powerbi-router/dist ^\\.\\/.*$\n ** module id = 10\n ** module chunks = 0\n **/","import * as Wpmp from 'window-post-message-proxy';\r\nimport * as Hpm from 'http-post-message';\r\nimport * as Router from 'powerbi-router';\r\nimport { mockAppSpyObj, mockApp } from './mockApp';\r\n\r\nexport const spyApp = mockAppSpyObj;\r\n\r\nexport function setup(iframeContentWindow: Window, parentWindow: Window, logMessages: boolean): Hpm.HttpPostMessage {\r\n  const parent = parentWindow || iframeContentWindow.parent;\r\n  const wpmp = new Wpmp.WindowPostMessageProxy(parentWindow, {\r\n    processTrackingProperties: {\r\n        addTrackingProperties: Hpm.HttpPostMessage.addTrackingProperties,\r\n        getTrackingProperties: Hpm.HttpPostMessage.getTrackingProperties,\r\n    },\r\n    isErrorMessage: Hpm.HttpPostMessage.isErrorMessage,\r\n    receiveWindow: iframeContentWindow,\r\n    name: 'MockAppWindowPostMessageProxy',\r\n    logMessages: false\r\n  });\r\n  const hpm = new Hpm.HttpPostMessage(wpmp, {\r\n    origin: 'powerbi'\r\n  });\r\n  const router = new Router.Router(wpmp);\r\n  const app = mockApp;\r\n  \r\n  /**\r\n   * Phase 1\r\n   */\r\n  router.post('/report/load', (req, res) => {\r\n    const loadConfig = req.body;\r\n    return app.validateLoad(loadConfig)\r\n      .then(() => {\r\n        app.load(loadConfig)\r\n          .then(() => {\r\n            const initiator = \"sdk\";\r\n            hpm.post('/report/events/loaded', {\r\n              initiator\r\n            });\r\n          }, error => {\r\n            hpm.post('/report/events/error', error);\r\n          });\r\n          \r\n        res.send(202);\r\n      }, error => {\r\n        res.send(400, error);\r\n      });\r\n  });\r\n  \r\n  router.get('/report/pages', (req, res) => {\r\n    return app.getPages()\r\n      .then(pages => {\r\n        res.send(200, pages);\r\n      });\r\n  });\r\n  \r\n  router.put('/report/pages/active', (req, res) => {\r\n    const page = req.body;\r\n    return app.validatePage(page)\r\n      .then(() => {\r\n        app.setActivePage(page)\r\n          .then(page => {\r\n            const initiator = \"sdk\";\r\n            hpm.post('/report/events/pageChanged', {\r\n              initiator,\r\n              page\r\n            });\r\n          }, error => {\r\n            hpm.post('/report/events/error', error);\r\n          });\r\n        \r\n        res.send(202);\r\n      }, error => {\r\n        res.send(400, error);\r\n      });\r\n  });\r\n  \r\n  /**\r\n   * Phase 2\r\n   */\r\n  router.get('/report/filters', (req, res) => {\r\n    return app.getFilters()\r\n      .then(filters => {\r\n        res.send(200, filters);\r\n      });\r\n  });\r\n  \r\n  router.post('/report/filters', (req, res) => {\r\n    const filter = req.body;\r\n    return app.validateFilter(filter)\r\n      .then(() => {\r\n        app.addFilter(filter)\r\n          .then(filter => {\r\n            const initiator = \"sdk\";\r\n            hpm.post('/report/events/filterAdded', {\r\n              initiator,\r\n              filter\r\n            });\r\n          }, error => {\r\n            hpm.post('/report/events/error', error);\r\n          });\r\n        \r\n        res.send(202);\r\n      }, error => {\r\n        res.send(400, error);\r\n      });\r\n  });\r\n  \r\n  router.put('/report/filters', (req, res) => {\r\n    const filter = req.body;\r\n    return app.validateFilter(filter)\r\n      .then(() => {\r\n        app.updateFilter(filter)\r\n          .then(filter => {\r\n            const initiator = \"sdk\";\r\n            hpm.post('/report/events/filterUpdated', {\r\n              initiator,\r\n              filter\r\n            });\r\n          }, error => {\r\n            hpm.post('/report/events/error', error);\r\n          });\r\n        \r\n        res.send(202);\r\n      }, error => {\r\n        res.send(400, error);\r\n      });\r\n  });\r\n  \r\n  router.delete('/report/filters', (req, res) => {\r\n    app.clearFilters()\r\n      .then(filter => {\r\n        const initiator = \"sdk\";\r\n        hpm.post('/report/events/filtersCleared', {\r\n          initiator,\r\n          filter\r\n        });\r\n      }, error => {\r\n        hpm.post('/report/events/error', error);\r\n      });\r\n    res.send(202);\r\n  })\r\n  \r\n  /**\r\n   * Phase 3\r\n   */\r\n  /**\r\n   * TODO: Investigate the api for getting setting filters at targets.\r\n   * Currently we are transforming the target into url parameters and then back out of url parameters\r\n   * although this is more correct for use of HTTP, it might be easier to just keep it as an object in the body.\r\n   */\r\n  router.get('/report/pages/:pageName/filters', (req, res) => {\r\n    const pageName = req.params.pageName;\r\n    const target = {\r\n      type: \"page\",\r\n      name: pageName\r\n    };\r\n    \r\n    return app.getFilters(target)\r\n      .then(filters => {\r\n        res.send(200, filters);\r\n      });\r\n  });\r\n  \r\n  router.post('/report/pages/:pageName/filters', (req, res) => {\r\n    const filter = req.body;\r\n    const pageName = req.params.pageName;\r\n    const target = {\r\n      type: \"page\",\r\n      name: pageName\r\n    };\r\n    \r\n    return app.validateFilter(filter)\r\n      .then(() => {\r\n        app.addFilter(filter, target)\r\n          .then(filter => {\r\n            const initiator = \"sdk\";\r\n            hpm.post(`/report/pages/${pageName}/events/filterAdded`, {\r\n              initiator,\r\n              filter\r\n            });\r\n          }, error => {\r\n            hpm.post('/report/events/error', error);\r\n          });\r\n        \r\n        res.send(202);\r\n      }, errors => {\r\n        res.send(400, errors);\r\n      });\r\n  });\r\n  \r\n  router.put('/report/pages/:pageName/filters', (req, res) => {\r\n    const filter = req.body;\r\n    const pageName = req.params.pageName;\r\n    const target = {\r\n      type: \"page\",\r\n      name: pageName\r\n    };\r\n    \r\n    return app.validateFilter(filter)\r\n      .then(() => {\r\n        app.updateFilter(filter, target)\r\n          .then(filter => {\r\n            const initiator = \"sdk\";\r\n            hpm.post(`/report/pages/${pageName}/events/filterUpdated`, {\r\n              initiator,\r\n              filter\r\n            });\r\n          }, error => {\r\n            hpm.post('/report/events/error', error);\r\n          });\r\n        \r\n        res.send(202);\r\n      }, errors => {\r\n        res.send(400, errors);\r\n      });\r\n  });\r\n  \r\n  router.put('/report/filters', (req, res) => {\r\n    const filter = req.body;\r\n    \r\n    return app.validateFilter(filter)\r\n      .then(() => {\r\n        app.updateFilter(filter)\r\n          .then(filter => {\r\n            const initiator = \"sdk\";\r\n            hpm.post(`/report/events/filterUpdated`, {\r\n              initiator,\r\n              filter\r\n            });\r\n          }, error => {\r\n            hpm.post('/report/events/error', error);\r\n          });\r\n        \r\n        res.send(202);\r\n      }, errors => {\r\n        res.send(400, errors);\r\n      });\r\n  });\r\n  \r\n  router.patch('/report/settings', (req, res) => {\r\n    const settings = req.body;\r\n    \r\n    return app.validateSettings(settings)\r\n      .then(() => {\r\n        app.updateSettings(settings)\r\n          .then(updatedSettings => {\r\n            const initiator = \"sdk\";\r\n            hpm.post(`/report/events/settingsUpdated`, {\r\n              initiator,\r\n              settings: updatedSettings\r\n            });\r\n          }, error => {\r\n            hpm.post('/report/events/error', error);\r\n          });\r\n        \r\n        res.send(202);\r\n      }, errors => {\r\n        res.send(400, errors);\r\n      });\r\n  })\r\n  \r\n  /**\r\n   * Phase 4\r\n   */\r\n  // No work for router\r\n  \r\n  /**\r\n   * Phase 5\r\n   */\r\n  router.get('/report/data', (req, res) => {\r\n    const target = {\r\n      type: 'visual',\r\n      visual: \"xyz?\"\r\n    };\r\n    \r\n    return app.exportData(target)\r\n      .then(data => {\r\n        res.send(200, data);\r\n      });\r\n  });\r\n  \r\n  return hpm;\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./e2e/utility/mockReportEmbed.ts\n **/","/**\r\n * These are the methods that should be implemented and exposed in the PowerBI angular application which can be invoked from the ReportEmbed iframe.\r\n */\r\n\r\nexport interface ILoad {\r\n  reportId: string;\r\n  accessToken: string;\r\n  options: IOptions;\r\n}\r\n\r\nexport interface IOptions {\r\n  filterPaneEnabled: boolean;\r\n  pageNavigationEnabled: boolean;\r\n}\r\n\r\nexport interface IPage {\r\n  name: string;\r\n  displayName: string;\r\n}\r\n\r\nexport interface ITarget {\r\n  // TODO?\r\n}\r\n\r\n// TODO: Replace with actual filters from 'powerbi-filters' package\r\nexport interface IFilter {\r\n  // TODO?\r\n}\r\n\r\nexport interface IValidationResponse {\r\n  errors: any[];\r\n}\r\n\r\nexport interface IApp {\r\n  // Load\r\n  load(config: ILoad): Promise<void>;\r\n  validateLoad(config: ILoad): Promise<IValidationResponse>;\r\n  // Settings\r\n  updateSettings(settings: IOptions): Promise<void>;\r\n  validateSettings(settigns: IOptions): Promise<IValidationResponse>;\r\n  \r\n  // Pages\r\n  getPages(): Promise<IPage>;\r\n  setActivePage(page: IPage): Promise<void>;\r\n  togglePageNavigation(): Promise<void>;\r\n  validatePage(page: IPage): Promise<IValidationResponse>;\r\n  // Filters\r\n  validateFilter(filter: IFilter): Promise<IValidationResponse>;\r\n  validateTarget(target: ITarget): Promise<IValidationResponse>;\r\n  getFilters(target?: ITarget): Promise<IFilter[]>;\r\n  addFilter(filter: IFilter, target?: ITarget): Promise<void>;\r\n  updateFilter(filter: IFilter, target?: ITarget): Promise<void>;\r\n  removeFilter(filter: IFilter, target?: ITarget): Promise<void>;\r\n  clearFilters(target?: ITarget): Promise<void>;\r\n  toggleFilterPane(): Promise<void>;\r\n  // Other\r\n  exportData(target: ITarget): Promise<void>;\r\n}\r\n\r\nexport const mockAppSpyObj = {\r\n  // Load\r\n  load: jasmine.createSpy(\"load\").and.returnValue(Promise.resolve(null)),\r\n  validateLoad: jasmine.createSpy(\"validateLoad\").and.returnValue(Promise.resolve(null)),\r\n  // Settings\r\n  updateSettings: jasmine.createSpy(\"updateSettings\").and.returnValue(Promise.resolve(null)),\r\n  validateSettings: jasmine.createSpy(\"validateSettings\").and.returnValue(Promise.resolve(null)),\r\n  // Pages\r\n  getPages: jasmine.createSpy(\"getPages\").and.returnValue(Promise.resolve(null)),\r\n  setActivePage: jasmine.createSpy(\"setActivePage\").and.returnValue(Promise.resolve(null)),\r\n  togglePageNavigation: jasmine.createSpy(\"togglePageNavigation\").and.returnValue(Promise.resolve(null)),\r\n  validatePage: jasmine.createSpy(\"validatePage\").and.returnValue(Promise.resolve(null)),\r\n  // Filters\r\n  validateFilter: jasmine.createSpy(\"validateFilter\").and.returnValue(Promise.resolve(null)),\r\n  validateTarget: jasmine.createSpy(\"validateTarget\").and.returnValue(Promise.resolve(null)),\r\n  getFilters: jasmine.createSpy(\"getFilters\").and.returnValue(Promise.resolve(null)),\r\n  addFilter: jasmine.createSpy(\"addFilter\").and.returnValue(Promise.resolve(null)),\r\n  updateFilter: jasmine.createSpy(\"updateFilter\").and.returnValue(Promise.resolve(null)),\r\n  removeFilter: jasmine.createSpy(\"removeFilter\").and.returnValue(Promise.resolve(null)),\r\n  clearFilters: jasmine.createSpy(\"clearFilters\").and.returnValue(Promise.resolve(null)),\r\n  toggleFilterPane: jasmine.createSpy(\"toggleFilterPane\").and.returnValue(Promise.resolve(null)),\r\n  // Other\r\n  exportData: jasmine.createSpy(\"exportData\").and.returnValue(Promise.resolve(null))\r\n};\r\n\r\nexport const mockApp: IApp = mockAppSpyObj;\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./e2e/utility/mockApp.ts\n **/"],"sourceRoot":""}